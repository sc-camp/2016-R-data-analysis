# clear R of all objects
rm(list=ls())
# concept quiz: how well can you interpret coefficients?
# See the last page of the practical handout for a candidate answer to the challenge
# Using broom dplyr, and ggplot to get fitted lines
############################
library(broom)
library(dplyr)
library(ggplot2)
##
# First use the data for simple linear regression
##
# import tannin data from Module 3 (linear models)
TANDAT <- read.csv("tannin.csv")
tanfit <- lm(GROWTH ~ TANNIN,
data = TANDAT)
summary(tanfit)
## Get a 'tidy' version of the model coefficients
tidy(tanfit)
## We can send the tidied model coefficients to a CSV file, so that the coefficients are easier to import into tables in MS Word or Excel
write.csv(tidy(tanfit), "TanninFits.csv", row.names = FALSE)
glance(tanfit)
augment(tanfit)
tanfit %>%
augment() %>%
ggplot(data = .,
aes(x = TANNIN,
y = GROWTH)) +
geom_point() +                  # points from original data frame
geom_line(aes(y = .fitted)) +   # line from model fit
geom_ribbon(aes(ymin = .fitted - (2 * .se.fit),
ymax = .fitted + (2 * .se.fit)),   # CIs from model fit
alpha = 0.3) +
theme_bw()
# alternatively, can use the package visreg
library(visreg)
# basic plot
visreg(tanfit)
# with points options
visreg(tanfit, points.par = list(cex = 1.2, col = "red"))
# with labels adjusted
visreg(tanfit,points.par = list(cex = 1.2, col = "red"),
ylab="Caterpillar mass gain (g)",
xlab="Dietary tannin dose (g/kg)")
###### Broom with ANCOVA ######
COMP <- read.csv("compensationo.csv")
comp_mod <- lm(FRUIT ~ ROOT + GRAZING,
data = COMP)
summary(comp_mod)
##
# How do the tidy versions change when there are multiple variables
##
## Get a 'tidy' version of the model coefficients
tidy(comp_mod)
## Get a 'tidy' version of the model summary statistics
glance(comp_mod)
## 'Augment' adds columns to the original data set
augment(comp_mod)
?augment
###### Broom with ANCOVA ######
COMP <- read.csv("compensationo.csv")
comp_mod <- lm(FRUIT ~ ROOT + GRAZING,
data = COMP)
summary(comp_mod)
##
# How do the tidy versions change when there are multiple variables
##
## Get a 'tidy' version of the model coefficients
tidy(comp_mod)
## Get a 'tidy' version of the model summary statistics
glance(comp_mod)
## 'Augment' adds columns to the original data set
augment(comp_mod)
visreg(comp_mod)
points.par = list(cex = 1.1, col = "red"))
visreg(comp_mod, xvar = "GRAZING", whitespace = 0.4,
points.par = list(cex = 1.1, col = "red"))
# can change the conditioning values;
# notice how when we change the ROOT diameter we change the location of the expected means for each treatment
visreg(comp_mod, xvar = "GRAZING", whitespace = 0.4,
points.par = list(cex = 1.1, col = "red"),
cond=list(ROOT=10))
# when using visreg to plot continuous variable effects in models with balanced designs, it's useful to check which treatment visreg by changing the condition statement
# First, plot only the effect of ROOT, but it's not clear which treatment for GRAZING is being used
visreg(comp_mod, xvar = "ROOT",
points.par = list(cex = 1.1, col = "red"))
# Now systematically change conditioning argument
visreg(comp_mod, xvar = "ROOT",
points.par = list(cex = 1.1, col = "red"),
cond=list(GRAZING="Ungrazed"))
visreg(comp_mod, xvar = "ROOT",
points.par = list(cex = 1.1, col = "red"),
cond=list(GRAZING="Grazed"))
# The second option matches the default
# using panels (I think this is not so clear)
visreg(comp_mod, xvar = "ROOT", by = "GRAZING",
points.par = list(cex = 1.1, col = "red"))
# overlay
visreg(comp_mod, xvar = "ROOT", by = "GRAZING",
overlay = TRUE, band = TRUE, points.par = list(cex = 1.1))
# now supp exercises from ANCOVA
# import data from suppex for ANCOVA on cattle weight gain
WEIGHTS<-read.csv("growth.csv")
head(WEIGHTS)
# relevel supplement so that control is reference
WEIGHTS$SUPPLEMENT<-relevel(WEIGHTS$SUPPLEMENT,ref="control")
# build a model
MOD.WEIGHTS<-lm(GAIN~DIET*SUPPLEMENT,data=WEIGHTS)
# stripcharts for ANOVA
# basic plots, will need to interact with console to see both
visreg(MOD.WEIGHTS)
visreg(MOD.WEIGHTS, xvar = "DIET", whitespace = 0.4,
points.par = list(cex = 1.1, col = "red"))
# three panels for diet
visreg(MOD.WEIGHTS, xvar = "SUPPLEMENT", by = "DIET",
whitespace = 0.4, points.par = list(cex = 1.1, col = "red"))
# overlay (but no 95%CI)
visreg(MOD.WEIGHTS, xvar = "SUPPLEMENT", by = "DIET",
whitespace = 0.5, overlay = TRUE, band = FALSE,
points.par = list(cex = 1.1))
# generalized models?
ISLAND<-read.csv("isolation.csv")
names(ISLAND)
MOD.2<-glm(INCIDENCE~AREA+ISOLATION,data=ISLAND,binomial)
# visreg will visualize fit on the transformed scale
visreg(MOD.2, xvar = "ISOLATION")
visreg(MOD.2, xvar = "AREA")
# or on the original scale; note "rug" which shows the position of data
visreg(MOD.2, xvar = "ISOLATION",scale="response")
visreg(MOD.2, xvar = "AREA",scale="response")
# OK, now plotting interactions between continuous variables
# import data on attractiveness of male dance fly silhouettes
visreg(MOD.2, xvar = "ISOLATION")
visreg(MOD.2, xvar = "AREA")
visreg(MOD.2, xvar = "ISOLATION",scale="response",rug=2)
visreg(MOD.2, xvar = "AREA",scale="response",rug=2)
