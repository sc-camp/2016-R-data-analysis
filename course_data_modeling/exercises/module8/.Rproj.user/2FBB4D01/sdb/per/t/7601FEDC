{
    "contents" : "\n#### Dance fly silhouettes ####\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(broom)\n\nDF <- read.csv(\"FLYSEX.csv\")\n\n# assumes model is ok\nORN.MOD.Q<-glm(ATTR~LEG*ABDOMEN,data=DF,family=quasipoisson)\n\nsummary(ORN.MOD.Q)\n\n#### .Predict ####\n\n# let's use predict instead...\n\n##\n# Set up our predictor sequences...\n# I like to do all the predictions for a single figure in one go\n##\ndf_ABD_BY_LEG <- expand.grid(NEW_ABD = seq(-3,3, length = 100),\n                             LEG_MINMAX = c(-2,0,2))\n\ndf_LEG_BY_ABD <- expand.grid(NEW_LEG = seq(-3,3, length = 100),\n                             ABD_MINMAX = c(-2,0,2))\n\n##\n# Predict!\n##\n\n## Continuous abdomen by specific values of leg\n\nPREDS_ABD_BY_LEG <- predict(ORN.MOD.Q,\n                            newdata=list(ABDOMEN = df_ABD_BY_LEG$NEW_ABD,\n                                         LEG = df_ABD_BY_LEG$LEG_MINMAX),\n                            se.fit=TRUE)\n\ndf_ABD_BY_LEG <- cbind(df_ABD_BY_LEG,\n                       PREDS_ABD_BY_LEG)\n\ndf_ABD_BY_LEG %>% \n  head()\n\n\n## Continuous leg by specific values of abdomen\n\nPREDS_LEG_BY_ABD <- predict(ORN.MOD.Q,\n                            newdata=list(LEG = df_LEG_BY_ABD$NEW_LEG,\n                                         ABDOMEN = df_LEG_BY_ABD$ABD_MINMAX),\n                            se.fit=TRUE)\n\ndf_LEG_BY_ABD <- cbind(df_LEG_BY_ABD,\n                       PREDS_LEG_BY_ABD)\n\n\n#### .Plot predictions ####\n\ngg_abd_log <- df_ABD_BY_LEG %>% \nggplot(.,\n       aes(x = NEW_ABD, y = fit, colour = factor(LEG_MINMAX))) +\n  geom_line() +\n  labs(x = \"Abdomen\",\n       y = \"Attractiveness (log-transformed)\",\n       title = \"Effect of abdomen on attractiveness\\n\n       for different values of leg\") +\n  guides(colour = guide_legend(title = \"Leg\")) +\n  theme_classic()\n\ngg_leg_log <- df_LEG_BY_ABD %>% \n  ggplot(.,\n         aes(x = NEW_LEG, y = fit, colour = factor(ABD_MINMAX))) +\n  geom_line() +\n  labs(x = \"Leg\",\n       y = \"Attractiveness (log-transformed)\",\n       title = \"Effect of leg on attractiveness\\n\n       for different values of abdomen\") +\n  guides(colour = guide_legend(title = \"Abdomen\")) +\n  theme_classic()\n\n##\n# Do the same plots, but back-transform the results\n##\n\ngg_abd_raw <- df_ABD_BY_LEG %>% \n  ggplot(.,\n         aes(x = NEW_ABD, y = exp(fit), colour = factor(LEG_MINMAX))) +\n  geom_line() +\n  labs(x = \"Abdomen\",\n       y = \"Attractiveness\",\n       title = \"Effect of abdomen on attractiveness\\n\n       for different values of leg\") +\n  guides(colour = guide_legend(title = \"Leg\")) +\n  theme_classic()\n\ngg_leg_raw <- df_LEG_BY_ABD %>% \n  ggplot(.,\n         aes(x = NEW_LEG, y = exp(fit), colour = factor(ABD_MINMAX))) +\n  geom_line() +\n  labs(x = \"Leg\",\n       y = \"Attractiveness\",\n       title = \"Effect of leg on attractiveness\\n\n       for different values of abdomen\") +\n  guides(colour = guide_legend(title = \"Abdomen\")) +\n  theme_classic()\n\n##\n# Plot them all together!\n##\n\nlibrary(gridExtra)\n\n##\n# We use grid.arrange from the gridExtra package to\n#  place all four of our plots on a single panel,\n#  separated into two columns\n##\ngrid.arrange(gg_abd_log, gg_leg_log,\n             gg_abd_raw, gg_leg_raw,\n             ncol = 2)\n",
    "created" : 1449163429515.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4182547666",
    "id" : "7601FEDC",
    "lastKnownWriteTime" : 1449141390,
    "path" : "~/Documents/formations/R - Ecosse/courses/Updates/AdvInR_Predict_ggplot.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}